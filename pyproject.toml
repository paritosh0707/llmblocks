[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llmblocks"
version = "0.1.0"
description = "Modular, scalable Python library for LLM-powered systems using LangChain and LangGraph"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LLMBlocks Team", email = "team@llmblocks.dev"}
]
keywords = ["llm", "langchain", "langgraph", "rag", "agents", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.12"
dependencies = [
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.1.0",
    "langgraph>=0.1.0",
    "openai>=1.0.0",
    "chromadb>=0.4.0",
    "redis>=5.0.0",
    "streamlit>=1.28.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "tiktoken>=0.5.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.16.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.23.0",
]
playground = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "altair>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/llmblocks/llmblocks"
Documentation = "https://llmblocks.dev"
Repository = "https://github.com/llmblocks/llmblocks"
"Bug Tracker" = "https://github.com/llmblocks/llmblocks/issues"

[project.scripts]
llmblocks = "llmblocks.cli.main:main"

[tool.hatch.build.targets.wheel]
packages = ["llmblocks"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["llmblocks"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langchain_openai.*",
    "langchain_community.*",
    "langgraph.*",
    "chromadb.*",
    "redis.*",
    "streamlit.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=llmblocks",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["llmblocks"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]